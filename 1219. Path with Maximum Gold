//python

class Solution(object):
    def getMaximumGold(self, grid):
        
        def find_max(a,b,c,d):
            max_num=a
            if b>max_num:
                max_num=b
            if c>max_num:
                max_num=c
            if d>max_num:
                max_num=d
            return max_num

        def dfs(i,j):
            # 超過範圍
            if i<0 or i>=len(grid) or j<0 or j>=len(grid[0]):
                return 0
            # 走到０時
            if grid[i][j]==0: 
                return 0
            tmp=grid[i][j]
            # 走過的路暫時歸０以避免一直來回走
            grid[i][j]=0
            # 上下左右選一路最佳的
            best=tmp+find_max(dfs(i-1,j),dfs(i+1,j),dfs(i,j-1),dfs(i,j+1))
            # 還原該路的值
            grid[i][j]=tmp
            return best

        result=0
        # 所有點做一次dfs
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                result=max(dfs(i,j),result)
        return result
        
