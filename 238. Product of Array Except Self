//Note: The returned array must be malloced, assume caller calls free()

int* productExceptSelf(int* nums, int numsSize, int* returnSize){
    
    *returnSize=numsSize; //C language must know size when returning array
    int* result=(int*)malloc(sizeof(int)*numsSize); //use malloc because of int* function 
    
    int left[numsSize],right[numsSize];
    left[0]=1; 
    right[0]=1;
    for(int i=1;i<numsSize;i++){
        left[i]=left[i-1]*nums[i-1];
        right[i]=right[i-1]*nums[numsSize-i];
    }

    for(int i=0;i<numsSize;i++) result[i]=left[i]*right[numsSize-1-i];
    return result;
}

//ex
//nums   = [      8,      5,       10,          7 ]
//left   = [      1,  (1)*8,  (1*8)*5, (1*8*5)*10 ]
//right  = [      1,  (1)*7, (1*7)*10, (1*7*10)*5 ]
//result = [ 5*10*7, 8*10*7,    8*5*7,     8*5*10 ]
